type Account @entity {
	id: ID!
	address: Bytes!
}

type Offer @entity {
	id: ID!
	originContract: Bytes!
	seller: Account
	bidder: Account!
	amount: BigInt!
	tokenId: BigInt!
	convertible: Boolean
}
type AuctionLogSnapshot @entity(immutable: true) {
	id: ID!
	contractAddress: Bytes!
	auctionCreator: Account!
	currencyAddress: Bytes!
	tokenId: BigInt!
	minimumBid: BigInt!
	seller: Account!
	bidder: Account
	amount: BigInt # current auction amount
	startedAuction: Boolean
	timestamp: BigInt!
}

type OfferLogSnapshot @entity {
	id: ID!
	originContract: Bytes!
	seller: Account
	bidder: Account!
	amount: BigInt!
	tokenId: BigInt!
	convertible: Boolean
	timestamp: BigInt!
}
type BidLogSnapshot @entity {
	id: ID!
	bidder: Account!
	auction: Auction!
	amount: BigInt!
	tokenId: BigInt!
	timestamp: BigInt!
}
type Auction @entity {
	id: ID!
	contractAddress: Bytes!
	auctionCreator: Account!
	currencyAddress: Bytes!
	tokenId: BigInt!
	minimumBid: BigInt!
	seller: Account! # auction creator is always the seller
	bidder: Account
	closingAmount: BigInt #closing amount
	bids: [Bid!] @derivedFrom(field: "auction")
	startedAuction: Boolean
}

type Bid @entity {
	id: ID!
	bidder: Account!
	auction: Auction!
	amount: BigInt!
	tokenId: BigInt!
}
