// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AcceptOffer extends ethereum.Event {
  get params(): AcceptOffer__Params {
    return new AcceptOffer__Params(this);
  }
}

export class AcceptOffer__Params {
  _event: AcceptOffer;

  constructor(event: AcceptOffer) {
    this._event = event;
  }

  get _originContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _bidder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _currencyAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get _splitAddresses(): Array<Address> {
    return this._event.parameters[6].value.toAddressArray();
  }

  get _splitRatios(): Array<i32> {
    return this._event.parameters[7].value.toI32Array();
  }
}

export class AuctionBid extends ethereum.Event {
  get params(): AuctionBid__Params {
    return new AuctionBid__Params(this);
  }
}

export class AuctionBid__Params {
  _event: AuctionBid;

  constructor(event: AuctionBid) {
    this._event = event;
  }

  get _contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _bidder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _currencyAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _startedAuction(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }

  get _newAuctionLength(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get _previousBidder(): Address {
    return this._event.parameters[7].value.toAddress();
  }
}

export class AuctionSettled extends ethereum.Event {
  get params(): AuctionSettled__Params {
    return new AuctionSettled__Params(this);
  }
}

export class AuctionSettled__Params {
  _event: AuctionSettled;

  constructor(event: AuctionSettled) {
    this._event = event;
  }

  get _contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _bidder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _currencyAddress(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class CancelAuction extends ethereum.Event {
  get params(): CancelAuction__Params {
    return new CancelAuction__Params(this);
  }
}

export class CancelAuction__Params {
  _event: CancelAuction;

  constructor(event: CancelAuction) {
    this._event = event;
  }

  get _contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _auctionCreator(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class CancelOffer extends ethereum.Event {
  get params(): CancelOffer__Params {
    return new CancelOffer__Params(this);
  }
}

export class CancelOffer__Params {
  _event: CancelOffer;

  constructor(event: CancelOffer) {
    this._event = event;
  }

  get _originContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _bidder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _currencyAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class NewAuction extends ethereum.Event {
  get params(): NewAuction__Params {
    return new NewAuction__Params(this);
  }
}

export class NewAuction__Params {
  _event: NewAuction;

  constructor(event: NewAuction) {
    this._event = event;
  }

  get _contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _auctionCreator(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _currencyAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _startingTime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _minimumBid(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get _lengthOfAuction(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class OfferPlaced extends ethereum.Event {
  get params(): OfferPlaced__Params {
    return new OfferPlaced__Params(this);
  }
}

export class OfferPlaced__Params {
  _event: OfferPlaced;

  constructor(event: OfferPlaced) {
    this._event = event;
  }

  get _originContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _bidder(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _currencyAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _convertible(): boolean {
    return this._event.parameters[5].value.toBoolean();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SetSalePrice extends ethereum.Event {
  get params(): SetSalePrice__Params {
    return new SetSalePrice__Params(this);
  }
}

export class SetSalePrice__Params {
  _event: SetSalePrice;

  constructor(event: SetSalePrice) {
    this._event = event;
  }

  get _originContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _currencyAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _target(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _splitRecipients(): Array<Address> {
    return this._event.parameters[5].value.toAddressArray();
  }

  get _splitRatios(): Array<i32> {
    return this._event.parameters[6].value.toI32Array();
  }
}

export class Sold extends ethereum.Event {
  get params(): Sold__Params {
    return new Sold__Params(this);
  }
}

export class Sold__Params {
  _event: Sold;

  constructor(event: Sold) {
    this._event = event;
  }

  get _originContract(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _seller(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _currencyAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _tokenId(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Contract__auctionBidsResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: i32;

  constructor(value0: Address, value1: Address, value2: BigInt, value3: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    return map;
  }

  getBidder(): Address {
    return this.value0;
  }

  getCurrencyAddress(): Address {
    return this.value1;
  }

  getAmount(): BigInt {
    return this.value2;
  }

  getMarketplaceFee(): i32 {
    return this.value3;
  }
}

export class Contract__getAuctionDetailsResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: Address;
  value5: BigInt;
  value6: Bytes;
  value7: Array<Address>;
  value8: Array<i32>;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: Address,
    value5: BigInt,
    value6: Bytes,
    value7: Array<Address>,
    value8: Array<i32>
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromFixedBytes(this.value6));
    map.set("value7", ethereum.Value.fromAddressArray(this.value7));
    map.set("value8", ethereum.Value.fromI32Array(this.value8));
    return map;
  }

  getValue0(): Address {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }

  getValue3(): BigInt {
    return this.value3;
  }

  getValue4(): Address {
    return this.value4;
  }

  getValue5(): BigInt {
    return this.value5;
  }

  getValue6(): Bytes {
    return this.value6;
  }

  getValue7(): Array<Address> {
    return this.value7;
  }

  getValue8(): Array<i32> {
    return this.value8;
  }
}

export class Contract__getSalePriceResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: Array<Address>;
  value4: Array<i32>;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: Array<Address>,
    value4: Array<i32>
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromAddressArray(this.value3));
    map.set("value4", ethereum.Value.fromI32Array(this.value4));
    return map;
  }

  getValue0(): Address {
    return this.value0;
  }

  getValue1(): Address {
    return this.value1;
  }

  getValue2(): BigInt {
    return this.value2;
  }

  getValue3(): Array<Address> {
    return this.value3;
  }

  getValue4(): Array<i32> {
    return this.value4;
  }
}

export class Contract__tokenAuctionsResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: Address;
  value5: BigInt;
  value6: Bytes;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: Address,
    value5: BigInt,
    value6: Bytes
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromFixedBytes(this.value6));
    return map;
  }

  getAuctionCreator(): Address {
    return this.value0;
  }

  getCreationBlock(): BigInt {
    return this.value1;
  }

  getStartingTime(): BigInt {
    return this.value2;
  }

  getLengthOfAuction(): BigInt {
    return this.value3;
  }

  getCurrencyAddress(): Address {
    return this.value4;
  }

  getMinimumBid(): BigInt {
    return this.value5;
  }

  getAuctionType(): Bytes {
    return this.value6;
  }
}

export class Contract__tokenCurrentOffersResult {
  value0: Address;
  value1: BigInt;
  value2: BigInt;
  value3: i32;
  value4: boolean;

  constructor(
    value0: Address,
    value1: BigInt,
    value2: BigInt,
    value3: i32,
    value4: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3))
    );
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    return map;
  }

  getBuyer(): Address {
    return this.value0;
  }

  getAmount(): BigInt {
    return this.value1;
  }

  getTimestamp(): BigInt {
    return this.value2;
  }

  getMarketplaceFee(): i32 {
    return this.value3;
  }

  getConvertible(): boolean {
    return this.value4;
  }
}

export class Contract__tokenSalePricesResult {
  value0: Address;
  value1: Address;
  value2: BigInt;

  constructor(value0: Address, value1: Address, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getSeller(): Address {
    return this.value0;
  }

  getCurrencyAddress(): Address {
    return this.value1;
  }

  getAmount(): BigInt {
    return this.value2;
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  COLDIE_AUCTION(): Bytes {
    let result = super.call("COLDIE_AUCTION", "COLDIE_AUCTION():(bytes32)", []);

    return result[0].toBytes();
  }

  try_COLDIE_AUCTION(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "COLDIE_AUCTION",
      "COLDIE_AUCTION():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  NO_AUCTION(): Bytes {
    let result = super.call("NO_AUCTION", "NO_AUCTION():(bytes32)", []);

    return result[0].toBytes();
  }

  try_NO_AUCTION(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("NO_AUCTION", "NO_AUCTION():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  SCHEDULED_AUCTION(): Bytes {
    let result = super.call(
      "SCHEDULED_AUCTION",
      "SCHEDULED_AUCTION():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_SCHEDULED_AUCTION(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "SCHEDULED_AUCTION",
      "SCHEDULED_AUCTION():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  approvedTokenRegistry(): Address {
    let result = super.call(
      "approvedTokenRegistry",
      "approvedTokenRegistry():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_approvedTokenRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "approvedTokenRegistry",
      "approvedTokenRegistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  auctionBids(param0: Address, param1: BigInt): Contract__auctionBidsResult {
    let result = super.call(
      "auctionBids",
      "auctionBids(address,uint256):(address,address,uint256,uint8)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new Contract__auctionBidsResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toI32()
    );
  }

  try_auctionBids(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<Contract__auctionBidsResult> {
    let result = super.tryCall(
      "auctionBids",
      "auctionBids(address,uint256):(address,address,uint256,uint8)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__auctionBidsResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toI32()
      )
    );
  }

  auctionLengthExtension(): BigInt {
    let result = super.call(
      "auctionLengthExtension",
      "auctionLengthExtension():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_auctionLengthExtension(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "auctionLengthExtension",
      "auctionLengthExtension():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAuctionDetails(
    _originContract: Address,
    _tokenId: BigInt
  ): Contract__getAuctionDetailsResult {
    let result = super.call(
      "getAuctionDetails",
      "getAuctionDetails(address,uint256):(address,uint256,uint256,uint256,address,uint256,bytes32,address[],uint8[])",
      [
        ethereum.Value.fromAddress(_originContract),
        ethereum.Value.fromUnsignedBigInt(_tokenId)
      ]
    );

    return new Contract__getAuctionDetailsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toAddress(),
      result[5].toBigInt(),
      result[6].toBytes(),
      result[7].toAddressArray(),
      result[8].toI32Array()
    );
  }

  try_getAuctionDetails(
    _originContract: Address,
    _tokenId: BigInt
  ): ethereum.CallResult<Contract__getAuctionDetailsResult> {
    let result = super.tryCall(
      "getAuctionDetails",
      "getAuctionDetails(address,uint256):(address,uint256,uint256,uint256,address,uint256,bytes32,address[],uint8[])",
      [
        ethereum.Value.fromAddress(_originContract),
        ethereum.Value.fromUnsignedBigInt(_tokenId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__getAuctionDetailsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toAddress(),
        value[5].toBigInt(),
        value[6].toBytes(),
        value[7].toAddressArray(),
        value[8].toI32Array()
      )
    );
  }

  getSalePrice(
    _originContract: Address,
    _tokenId: BigInt,
    _target: Address
  ): Contract__getSalePriceResult {
    let result = super.call(
      "getSalePrice",
      "getSalePrice(address,uint256,address):(address,address,uint256,address[],uint8[])",
      [
        ethereum.Value.fromAddress(_originContract),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromAddress(_target)
      ]
    );

    return new Contract__getSalePriceResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toAddressArray(),
      result[4].toI32Array()
    );
  }

  try_getSalePrice(
    _originContract: Address,
    _tokenId: BigInt,
    _target: Address
  ): ethereum.CallResult<Contract__getSalePriceResult> {
    let result = super.tryCall(
      "getSalePrice",
      "getSalePrice(address,uint256,address):(address,address,uint256,address[],uint8[])",
      [
        ethereum.Value.fromAddress(_originContract),
        ethereum.Value.fromUnsignedBigInt(_tokenId),
        ethereum.Value.fromAddress(_target)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__getSalePriceResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toAddressArray(),
        value[4].toI32Array()
      )
    );
  }

  marketplaceSettings(): Address {
    let result = super.call(
      "marketplaceSettings",
      "marketplaceSettings():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_marketplaceSettings(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "marketplaceSettings",
      "marketplaceSettings():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  maxAuctionLength(): BigInt {
    let result = super.call(
      "maxAuctionLength",
      "maxAuctionLength():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxAuctionLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxAuctionLength",
      "maxAuctionLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minimumBidIncreasePercentage(): i32 {
    let result = super.call(
      "minimumBidIncreasePercentage",
      "minimumBidIncreasePercentage():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_minimumBidIncreasePercentage(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "minimumBidIncreasePercentage",
      "minimumBidIncreasePercentage():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  networkBeneficiary(): Address {
    let result = super.call(
      "networkBeneficiary",
      "networkBeneficiary():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_networkBeneficiary(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "networkBeneficiary",
      "networkBeneficiary():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  offerCancelationDelay(): BigInt {
    let result = super.call(
      "offerCancelationDelay",
      "offerCancelationDelay():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_offerCancelationDelay(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "offerCancelationDelay",
      "offerCancelationDelay():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  payments(): Address {
    let result = super.call("payments", "payments():(address)", []);

    return result[0].toAddress();
  }

  try_payments(): ethereum.CallResult<Address> {
    let result = super.tryCall("payments", "payments():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  royaltyEngine(): Address {
    let result = super.call("royaltyEngine", "royaltyEngine():(address)", []);

    return result[0].toAddress();
  }

  try_royaltyEngine(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "royaltyEngine",
      "royaltyEngine():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  royaltyRegistry(): Address {
    let result = super.call(
      "royaltyRegistry",
      "royaltyRegistry():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_royaltyRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "royaltyRegistry",
      "royaltyRegistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  spaceOperatorRegistry(): Address {
    let result = super.call(
      "spaceOperatorRegistry",
      "spaceOperatorRegistry():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_spaceOperatorRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "spaceOperatorRegistry",
      "spaceOperatorRegistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  stakingRegistry(): Address {
    let result = super.call(
      "stakingRegistry",
      "stakingRegistry():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_stakingRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "stakingRegistry",
      "stakingRegistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  superRareAuctionHouse(): Address {
    let result = super.call(
      "superRareAuctionHouse",
      "superRareAuctionHouse():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_superRareAuctionHouse(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "superRareAuctionHouse",
      "superRareAuctionHouse():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  superRareMarketplace(): Address {
    let result = super.call(
      "superRareMarketplace",
      "superRareMarketplace():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_superRareMarketplace(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "superRareMarketplace",
      "superRareMarketplace():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenAuctions(
    param0: Address,
    param1: BigInt
  ): Contract__tokenAuctionsResult {
    let result = super.call(
      "tokenAuctions",
      "tokenAuctions(address,uint256):(address,uint256,uint256,uint256,address,uint256,bytes32)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new Contract__tokenAuctionsResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toAddress(),
      result[5].toBigInt(),
      result[6].toBytes()
    );
  }

  try_tokenAuctions(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<Contract__tokenAuctionsResult> {
    let result = super.tryCall(
      "tokenAuctions",
      "tokenAuctions(address,uint256):(address,uint256,uint256,uint256,address,uint256,bytes32)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__tokenAuctionsResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toAddress(),
        value[5].toBigInt(),
        value[6].toBytes()
      )
    );
  }

  tokenCurrentOffers(
    param0: Address,
    param1: BigInt,
    param2: Address
  ): Contract__tokenCurrentOffersResult {
    let result = super.call(
      "tokenCurrentOffers",
      "tokenCurrentOffers(address,uint256,address):(address,uint256,uint256,uint8,bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromAddress(param2)
      ]
    );

    return new Contract__tokenCurrentOffersResult(
      result[0].toAddress(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toI32(),
      result[4].toBoolean()
    );
  }

  try_tokenCurrentOffers(
    param0: Address,
    param1: BigInt,
    param2: Address
  ): ethereum.CallResult<Contract__tokenCurrentOffersResult> {
    let result = super.tryCall(
      "tokenCurrentOffers",
      "tokenCurrentOffers(address,uint256,address):(address,uint256,uint256,uint8,bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromAddress(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__tokenCurrentOffersResult(
        value[0].toAddress(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toI32(),
        value[4].toBoolean()
      )
    );
  }

  tokenSalePrices(
    param0: Address,
    param1: BigInt,
    param2: Address
  ): Contract__tokenSalePricesResult {
    let result = super.call(
      "tokenSalePrices",
      "tokenSalePrices(address,uint256,address):(address,address,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromAddress(param2)
      ]
    );

    return new Contract__tokenSalePricesResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt()
    );
  }

  try_tokenSalePrices(
    param0: Address,
    param1: BigInt,
    param2: Address
  ): ethereum.CallResult<Contract__tokenSalePricesResult> {
    let result = super.tryCall(
      "tokenSalePrices",
      "tokenSalePrices(address,uint256,address):(address,address,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromAddress(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract__tokenSalePricesResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt()
      )
    );
  }
}

export class AcceptOfferCall extends ethereum.Call {
  get inputs(): AcceptOfferCall__Inputs {
    return new AcceptOfferCall__Inputs(this);
  }

  get outputs(): AcceptOfferCall__Outputs {
    return new AcceptOfferCall__Outputs(this);
  }
}

export class AcceptOfferCall__Inputs {
  _call: AcceptOfferCall;

  constructor(call: AcceptOfferCall) {
    this._call = call;
  }

  get _originContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _currencyAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _splitAddresses(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }

  get _splitRatios(): Array<i32> {
    return this._call.inputValues[5].value.toI32Array();
  }
}

export class AcceptOfferCall__Outputs {
  _call: AcceptOfferCall;

  constructor(call: AcceptOfferCall) {
    this._call = call;
  }
}

export class BidCall extends ethereum.Call {
  get inputs(): BidCall__Inputs {
    return new BidCall__Inputs(this);
  }

  get outputs(): BidCall__Outputs {
    return new BidCall__Outputs(this);
  }
}

export class BidCall__Inputs {
  _call: BidCall;

  constructor(call: BidCall) {
    this._call = call;
  }

  get _originContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _currencyAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class BidCall__Outputs {
  _call: BidCall;

  constructor(call: BidCall) {
    this._call = call;
  }
}

export class BuyCall extends ethereum.Call {
  get inputs(): BuyCall__Inputs {
    return new BuyCall__Inputs(this);
  }

  get outputs(): BuyCall__Outputs {
    return new BuyCall__Outputs(this);
  }
}

export class BuyCall__Inputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }

  get _originContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _currencyAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class BuyCall__Outputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }
}

export class CancelAuctionCall extends ethereum.Call {
  get inputs(): CancelAuctionCall__Inputs {
    return new CancelAuctionCall__Inputs(this);
  }

  get outputs(): CancelAuctionCall__Outputs {
    return new CancelAuctionCall__Outputs(this);
  }
}

export class CancelAuctionCall__Inputs {
  _call: CancelAuctionCall;

  constructor(call: CancelAuctionCall) {
    this._call = call;
  }

  get _originContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CancelAuctionCall__Outputs {
  _call: CancelAuctionCall;

  constructor(call: CancelAuctionCall) {
    this._call = call;
  }
}

export class CancelOfferCall extends ethereum.Call {
  get inputs(): CancelOfferCall__Inputs {
    return new CancelOfferCall__Inputs(this);
  }

  get outputs(): CancelOfferCall__Outputs {
    return new CancelOfferCall__Outputs(this);
  }
}

export class CancelOfferCall__Inputs {
  _call: CancelOfferCall;

  constructor(call: CancelOfferCall) {
    this._call = call;
  }

  get _originContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _currencyAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class CancelOfferCall__Outputs {
  _call: CancelOfferCall;

  constructor(call: CancelOfferCall) {
    this._call = call;
  }
}

export class ConfigureAuctionCall extends ethereum.Call {
  get inputs(): ConfigureAuctionCall__Inputs {
    return new ConfigureAuctionCall__Inputs(this);
  }

  get outputs(): ConfigureAuctionCall__Outputs {
    return new ConfigureAuctionCall__Outputs(this);
  }
}

export class ConfigureAuctionCall__Inputs {
  _call: ConfigureAuctionCall;

  constructor(call: ConfigureAuctionCall) {
    this._call = call;
  }

  get _auctionType(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _originContract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _startingAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _currencyAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _lengthOfAuction(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _startTime(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _splitAddresses(): Array<Address> {
    return this._call.inputValues[7].value.toAddressArray();
  }

  get _splitRatios(): Array<i32> {
    return this._call.inputValues[8].value.toI32Array();
  }
}

export class ConfigureAuctionCall__Outputs {
  _call: ConfigureAuctionCall;

  constructor(call: ConfigureAuctionCall) {
    this._call = call;
  }
}

export class ConvertOfferToAuctionCall extends ethereum.Call {
  get inputs(): ConvertOfferToAuctionCall__Inputs {
    return new ConvertOfferToAuctionCall__Inputs(this);
  }

  get outputs(): ConvertOfferToAuctionCall__Outputs {
    return new ConvertOfferToAuctionCall__Outputs(this);
  }
}

export class ConvertOfferToAuctionCall__Inputs {
  _call: ConvertOfferToAuctionCall;

  constructor(call: ConvertOfferToAuctionCall) {
    this._call = call;
  }

  get _originContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _currencyAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _lengthOfAuction(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _splitAddresses(): Array<Address> {
    return this._call.inputValues[5].value.toAddressArray();
  }

  get _splitRatios(): Array<i32> {
    return this._call.inputValues[6].value.toI32Array();
  }
}

export class ConvertOfferToAuctionCall__Outputs {
  _call: ConvertOfferToAuctionCall;

  constructor(call: ConvertOfferToAuctionCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _marketplaceSettings(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _royaltyRegistry(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _royaltyEngine(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _superRareMarketplace(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _superRareAuctionHouse(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _spaceOperatorRegistry(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _approvedTokenRegistry(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get _payments(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get _stakingRegistry(): Address {
    return this._call.inputValues[8].value.toAddress();
  }

  get _networkBeneficiary(): Address {
    return this._call.inputValues[9].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class OfferCall extends ethereum.Call {
  get inputs(): OfferCall__Inputs {
    return new OfferCall__Inputs(this);
  }

  get outputs(): OfferCall__Outputs {
    return new OfferCall__Outputs(this);
  }
}

export class OfferCall__Inputs {
  _call: OfferCall;

  constructor(call: OfferCall) {
    this._call = call;
  }

  get _originContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _currencyAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _convertible(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class OfferCall__Outputs {
  _call: OfferCall;

  constructor(call: OfferCall) {
    this._call = call;
  }
}

export class RemoveSalePriceCall extends ethereum.Call {
  get inputs(): RemoveSalePriceCall__Inputs {
    return new RemoveSalePriceCall__Inputs(this);
  }

  get outputs(): RemoveSalePriceCall__Outputs {
    return new RemoveSalePriceCall__Outputs(this);
  }
}

export class RemoveSalePriceCall__Inputs {
  _call: RemoveSalePriceCall;

  constructor(call: RemoveSalePriceCall) {
    this._call = call;
  }

  get _originContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _target(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class RemoveSalePriceCall__Outputs {
  _call: RemoveSalePriceCall;

  constructor(call: RemoveSalePriceCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetApprovedTokenRegistryCall extends ethereum.Call {
  get inputs(): SetApprovedTokenRegistryCall__Inputs {
    return new SetApprovedTokenRegistryCall__Inputs(this);
  }

  get outputs(): SetApprovedTokenRegistryCall__Outputs {
    return new SetApprovedTokenRegistryCall__Outputs(this);
  }
}

export class SetApprovedTokenRegistryCall__Inputs {
  _call: SetApprovedTokenRegistryCall;

  constructor(call: SetApprovedTokenRegistryCall) {
    this._call = call;
  }

  get _approvedTokenRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetApprovedTokenRegistryCall__Outputs {
  _call: SetApprovedTokenRegistryCall;

  constructor(call: SetApprovedTokenRegistryCall) {
    this._call = call;
  }
}

export class SetAuctionLengthExtensionCall extends ethereum.Call {
  get inputs(): SetAuctionLengthExtensionCall__Inputs {
    return new SetAuctionLengthExtensionCall__Inputs(this);
  }

  get outputs(): SetAuctionLengthExtensionCall__Outputs {
    return new SetAuctionLengthExtensionCall__Outputs(this);
  }
}

export class SetAuctionLengthExtensionCall__Inputs {
  _call: SetAuctionLengthExtensionCall;

  constructor(call: SetAuctionLengthExtensionCall) {
    this._call = call;
  }

  get _auctionLengthExtension(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetAuctionLengthExtensionCall__Outputs {
  _call: SetAuctionLengthExtensionCall;

  constructor(call: SetAuctionLengthExtensionCall) {
    this._call = call;
  }
}

export class SetMarketplaceSettingsCall extends ethereum.Call {
  get inputs(): SetMarketplaceSettingsCall__Inputs {
    return new SetMarketplaceSettingsCall__Inputs(this);
  }

  get outputs(): SetMarketplaceSettingsCall__Outputs {
    return new SetMarketplaceSettingsCall__Outputs(this);
  }
}

export class SetMarketplaceSettingsCall__Inputs {
  _call: SetMarketplaceSettingsCall;

  constructor(call: SetMarketplaceSettingsCall) {
    this._call = call;
  }

  get _marketplaceSettings(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMarketplaceSettingsCall__Outputs {
  _call: SetMarketplaceSettingsCall;

  constructor(call: SetMarketplaceSettingsCall) {
    this._call = call;
  }
}

export class SetMaxAuctionLengthCall extends ethereum.Call {
  get inputs(): SetMaxAuctionLengthCall__Inputs {
    return new SetMaxAuctionLengthCall__Inputs(this);
  }

  get outputs(): SetMaxAuctionLengthCall__Outputs {
    return new SetMaxAuctionLengthCall__Outputs(this);
  }
}

export class SetMaxAuctionLengthCall__Inputs {
  _call: SetMaxAuctionLengthCall;

  constructor(call: SetMaxAuctionLengthCall) {
    this._call = call;
  }

  get _maxAuctionLength(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetMaxAuctionLengthCall__Outputs {
  _call: SetMaxAuctionLengthCall;

  constructor(call: SetMaxAuctionLengthCall) {
    this._call = call;
  }
}

export class SetMinimumBidIncreasePercentageCall extends ethereum.Call {
  get inputs(): SetMinimumBidIncreasePercentageCall__Inputs {
    return new SetMinimumBidIncreasePercentageCall__Inputs(this);
  }

  get outputs(): SetMinimumBidIncreasePercentageCall__Outputs {
    return new SetMinimumBidIncreasePercentageCall__Outputs(this);
  }
}

export class SetMinimumBidIncreasePercentageCall__Inputs {
  _call: SetMinimumBidIncreasePercentageCall;

  constructor(call: SetMinimumBidIncreasePercentageCall) {
    this._call = call;
  }

  get _minimumBidIncreasePercentage(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetMinimumBidIncreasePercentageCall__Outputs {
  _call: SetMinimumBidIncreasePercentageCall;

  constructor(call: SetMinimumBidIncreasePercentageCall) {
    this._call = call;
  }
}

export class SetNetworkBeneficiaryCall extends ethereum.Call {
  get inputs(): SetNetworkBeneficiaryCall__Inputs {
    return new SetNetworkBeneficiaryCall__Inputs(this);
  }

  get outputs(): SetNetworkBeneficiaryCall__Outputs {
    return new SetNetworkBeneficiaryCall__Outputs(this);
  }
}

export class SetNetworkBeneficiaryCall__Inputs {
  _call: SetNetworkBeneficiaryCall;

  constructor(call: SetNetworkBeneficiaryCall) {
    this._call = call;
  }

  get _networkBeneficiary(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetNetworkBeneficiaryCall__Outputs {
  _call: SetNetworkBeneficiaryCall;

  constructor(call: SetNetworkBeneficiaryCall) {
    this._call = call;
  }
}

export class SetOfferCancelationDelayCall extends ethereum.Call {
  get inputs(): SetOfferCancelationDelayCall__Inputs {
    return new SetOfferCancelationDelayCall__Inputs(this);
  }

  get outputs(): SetOfferCancelationDelayCall__Outputs {
    return new SetOfferCancelationDelayCall__Outputs(this);
  }
}

export class SetOfferCancelationDelayCall__Inputs {
  _call: SetOfferCancelationDelayCall;

  constructor(call: SetOfferCancelationDelayCall) {
    this._call = call;
  }

  get _offerCancelationDelay(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetOfferCancelationDelayCall__Outputs {
  _call: SetOfferCancelationDelayCall;

  constructor(call: SetOfferCancelationDelayCall) {
    this._call = call;
  }
}

export class SetPaymentsCall extends ethereum.Call {
  get inputs(): SetPaymentsCall__Inputs {
    return new SetPaymentsCall__Inputs(this);
  }

  get outputs(): SetPaymentsCall__Outputs {
    return new SetPaymentsCall__Outputs(this);
  }
}

export class SetPaymentsCall__Inputs {
  _call: SetPaymentsCall;

  constructor(call: SetPaymentsCall) {
    this._call = call;
  }

  get _payments(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPaymentsCall__Outputs {
  _call: SetPaymentsCall;

  constructor(call: SetPaymentsCall) {
    this._call = call;
  }
}

export class SetRoyaltyEngineCall extends ethereum.Call {
  get inputs(): SetRoyaltyEngineCall__Inputs {
    return new SetRoyaltyEngineCall__Inputs(this);
  }

  get outputs(): SetRoyaltyEngineCall__Outputs {
    return new SetRoyaltyEngineCall__Outputs(this);
  }
}

export class SetRoyaltyEngineCall__Inputs {
  _call: SetRoyaltyEngineCall;

  constructor(call: SetRoyaltyEngineCall) {
    this._call = call;
  }

  get _royaltyEngine(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRoyaltyEngineCall__Outputs {
  _call: SetRoyaltyEngineCall;

  constructor(call: SetRoyaltyEngineCall) {
    this._call = call;
  }
}

export class SetRoyaltyRegistryCall extends ethereum.Call {
  get inputs(): SetRoyaltyRegistryCall__Inputs {
    return new SetRoyaltyRegistryCall__Inputs(this);
  }

  get outputs(): SetRoyaltyRegistryCall__Outputs {
    return new SetRoyaltyRegistryCall__Outputs(this);
  }
}

export class SetRoyaltyRegistryCall__Inputs {
  _call: SetRoyaltyRegistryCall;

  constructor(call: SetRoyaltyRegistryCall) {
    this._call = call;
  }

  get _royaltyRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRoyaltyRegistryCall__Outputs {
  _call: SetRoyaltyRegistryCall;

  constructor(call: SetRoyaltyRegistryCall) {
    this._call = call;
  }
}

export class SetSalePriceCall extends ethereum.Call {
  get inputs(): SetSalePriceCall__Inputs {
    return new SetSalePriceCall__Inputs(this);
  }

  get outputs(): SetSalePriceCall__Outputs {
    return new SetSalePriceCall__Outputs(this);
  }
}

export class SetSalePriceCall__Inputs {
  _call: SetSalePriceCall;

  constructor(call: SetSalePriceCall) {
    this._call = call;
  }

  get _originContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _currencyAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _listPrice(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _target(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _splitAddresses(): Array<Address> {
    return this._call.inputValues[5].value.toAddressArray();
  }

  get _splitRatios(): Array<i32> {
    return this._call.inputValues[6].value.toI32Array();
  }
}

export class SetSalePriceCall__Outputs {
  _call: SetSalePriceCall;

  constructor(call: SetSalePriceCall) {
    this._call = call;
  }
}

export class SetSpaceOperatorRegistryCall extends ethereum.Call {
  get inputs(): SetSpaceOperatorRegistryCall__Inputs {
    return new SetSpaceOperatorRegistryCall__Inputs(this);
  }

  get outputs(): SetSpaceOperatorRegistryCall__Outputs {
    return new SetSpaceOperatorRegistryCall__Outputs(this);
  }
}

export class SetSpaceOperatorRegistryCall__Inputs {
  _call: SetSpaceOperatorRegistryCall;

  constructor(call: SetSpaceOperatorRegistryCall) {
    this._call = call;
  }

  get _spaceOperatorRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSpaceOperatorRegistryCall__Outputs {
  _call: SetSpaceOperatorRegistryCall;

  constructor(call: SetSpaceOperatorRegistryCall) {
    this._call = call;
  }
}

export class SetStakingRegistryCall extends ethereum.Call {
  get inputs(): SetStakingRegistryCall__Inputs {
    return new SetStakingRegistryCall__Inputs(this);
  }

  get outputs(): SetStakingRegistryCall__Outputs {
    return new SetStakingRegistryCall__Outputs(this);
  }
}

export class SetStakingRegistryCall__Inputs {
  _call: SetStakingRegistryCall;

  constructor(call: SetStakingRegistryCall) {
    this._call = call;
  }

  get _stakingRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetStakingRegistryCall__Outputs {
  _call: SetStakingRegistryCall;

  constructor(call: SetStakingRegistryCall) {
    this._call = call;
  }
}

export class SetSuperRareAuctionHouseCall extends ethereum.Call {
  get inputs(): SetSuperRareAuctionHouseCall__Inputs {
    return new SetSuperRareAuctionHouseCall__Inputs(this);
  }

  get outputs(): SetSuperRareAuctionHouseCall__Outputs {
    return new SetSuperRareAuctionHouseCall__Outputs(this);
  }
}

export class SetSuperRareAuctionHouseCall__Inputs {
  _call: SetSuperRareAuctionHouseCall;

  constructor(call: SetSuperRareAuctionHouseCall) {
    this._call = call;
  }

  get _superRareAuctionHouse(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSuperRareAuctionHouseCall__Outputs {
  _call: SetSuperRareAuctionHouseCall;

  constructor(call: SetSuperRareAuctionHouseCall) {
    this._call = call;
  }
}

export class SetSuperRareMarketplaceCall extends ethereum.Call {
  get inputs(): SetSuperRareMarketplaceCall__Inputs {
    return new SetSuperRareMarketplaceCall__Inputs(this);
  }

  get outputs(): SetSuperRareMarketplaceCall__Outputs {
    return new SetSuperRareMarketplaceCall__Outputs(this);
  }
}

export class SetSuperRareMarketplaceCall__Inputs {
  _call: SetSuperRareMarketplaceCall;

  constructor(call: SetSuperRareMarketplaceCall) {
    this._call = call;
  }

  get _superRareMarketplace(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSuperRareMarketplaceCall__Outputs {
  _call: SetSuperRareMarketplaceCall;

  constructor(call: SetSuperRareMarketplaceCall) {
    this._call = call;
  }
}

export class SettleAuctionCall extends ethereum.Call {
  get inputs(): SettleAuctionCall__Inputs {
    return new SettleAuctionCall__Inputs(this);
  }

  get outputs(): SettleAuctionCall__Outputs {
    return new SettleAuctionCall__Outputs(this);
  }
}

export class SettleAuctionCall__Inputs {
  _call: SettleAuctionCall;

  constructor(call: SettleAuctionCall) {
    this._call = call;
  }

  get _originContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SettleAuctionCall__Outputs {
  _call: SettleAuctionCall;

  constructor(call: SettleAuctionCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
